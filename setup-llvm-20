#!/bin/bash
# file: setup-llvm-20

module --force purge
module load CCconfig gentoo/2023
module load StdEnv/2023
module unload gcc openmpi
module load llvm/20.1.8 gsl/2.7 rarray/2.8.0 fftw

# install catch2 locally and manually, the one in the gcccore
# toolchain does not link properly.

setup_location=$(readlink -f $(dirname $BASH_SOURCE))
prefix="$setup_location/more-for-llvm-20"

mkdir -p "$prefix"
pushd "$prefix"

# compile catch2

version="3.3.1"
if ! [ -d Catch2-$version ]; then
    archive="v${version}.tar.gz"
    url="https://github.com/catchorg/Catch2/archive/refs/tags/$archive"
    sha256sum="d90351cdc55421f640c553cfc0875a8c834428679444e8062e9187d05b18aace"
    wget "$url"
    sha256sum --check <<<"$sha256sum $archive"
    tar xvaf "$archive"
    module load cmake # hoping it picks up clang
    mkdir -p Catch2-$version/build
    pushd Catch2-$version/build
    cmake .. -DCMAKE_INSTALL_PREFIX=$prefix -DCMAKE_CXX_COMPILER=clang++
    make install
    popd
fi

# compile boost

version="1.87.0"
uversion=$(echo $version | tr . _)
if ! [ -d "boost_$uversion" ]; then
    sha256sum="f55c340aa49763b1925ccf02b2e83f35fdcf634c9d5164a2acb87540173c741d"
    archive="boost_$uversion.tar.gz"
    url="https://archives.boost.io/release/1.87.0/source/$archive"
    wget "$url"
    sha256sum --check <<<"$sha256sum $archive"
    tar -xvaf "$archive"
    pushd "boost_$uversion"
    toolset=clang
    sed -i 's/ -static//' tools/build/src/engine/build.sh
    ./bootstrap.sh --prefix="$prefix" \
		   --with-toolset="$toolset" \
		   --without-libraries=python,mpi
    ./b2 \
	-j"$(nproc)" \
	-q \
	toolset="$toolset" \
	install
    popd
fi

if [ -z "${EBROOTAOCLMINBLAS:-}" ]; then
    # substitute gsl for blis
    if ! [ -h "${prefix}/include/blis64/cblas.h" ]; then
        mkdir -p "${prefix}/include/blis64"
        ln -s "$EBROOTGSL/include/gsl/gsl_cblas.h" "${prefix}/include/blis64/cblas.h"
    fi
    if ! [ -h "${prefix}/lib64/libblis-mt64.so" ]; then
        mkdir -p "${prefix}/lib64"
        ln -s "$EBROOTGSL/lib/libgslcblas.so" "${prefix}/lib64/libblis-mt64.so"
    fi
    export EBROOTAOCLMINBLAS="${prefix}"
    export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:EBROOTAOCLMINBLAS/lib64"
fi

popd

if ! [[ $LD_LIBRARY_PATH =~ $prefix ]]; then
    export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$prefix/lib:$prefix/lib64"
fi

if [ $? = 0 ]; then
    
    cat > $(dirname ${BASH_SOURCE})/config.mk <<-EOF
	# file: config.mk
	# generated by: setup-llvm-20

	CC=clang
	CXX=clang++
	MPICXX=:

	OPTFLAGS=-O3 -ffast-math -march=znver5 -funroll-loops
	WARNFLAGS=-Wall -Wfatal-errors -Wno-unused-function -Wno-nan-infinity-disabled

	CFLAGS=\$(OPTFLAGS) \$(WARNFLAGS)
	CXXFLAGS=-std=c++17 \$(CFLAGS)
	OMPFLAGS=-fopenmp
	LDFLAGS=-O3 -march=znver5

	CATCH2INCDIR=${prefix}/include
	CATCH2LIBDIR=${prefix}/lib64
	CATCH2LIBS=-lCatch2Main -lCatch2

	BLASINCDIR=\$(EBROOTAOCLMINBLAS)/include/blis64
	BLASLIBDIR=\$(EBROOTAOCLMINBLAS)/lib64
	BLASLIBS=-lblis-mt64

	BOOSTINCDIR=${prefix}/include
	BOOSTLIBDIR=${prefix}/lib
	BOOSTLIBS=-lboost_program_options

	GSLLIBS=-lgsl \${BLASLIBS}

	FFTWLIBS=-lfftw3
EOF
fi
